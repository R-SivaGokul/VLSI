module top_module (
    input clk,
    input reset,      // Synchronous reset
    input data,
    output start_shifting);
    
    parameter [2:0] A=0,B=1,C=2,D=3,E=4;
    reg [2:0] state,next_state;
    
    always@(posedge clk) begin
        if(reset)
            state<=A;
        else
            state<=next_state;
    end
    
    always@(*) begin
        case(state)
            A:begin
                if(data==0)
                    next_state<=A;
                else
                    next_state<=B;
            end
            
            B:begin
                if(data==0)
                    next_state<=A;
                else
                    next_state<=C;
            end
            
            C:begin
                if(data==0)
                    next_state<=D;
                else
                    next_state<=C;
            end
            
            D:begin
                if(data==0)
                    next_state<=A;
                else
                    next_state<=E;
            end
            
            E:next_state<=E;
            default:next_state<=A;
        endcase
    end
    
    assign start_shifting=state==E;            

endmodule
