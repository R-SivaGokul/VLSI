module top_module(
    input clk,
    input areset,    // Asynchronous reset to state B
    input in,
    output out);//  

    parameter A=0, B=1; 
    reg state, next_state;

    always @(*) begin    // This is a combinational always block
        case(state)				 // State transition logic
            B:begin
                if(in==0)
                    next_state<=A;
                else
                    next_state<=B;
            end
            A:begin
                if(in==0)
                    next_state<=B;
                else
                    next_state<=A;
            end
            default:state<=B;
        endcase
    end

    always @(posedge clk, posedge areset) begin    // This is a sequential always block
        if(areset)								   // State flip-flops with asynchronous reset
            state<=B;
        else
            state<=next_state;
    end

    // Output logic
    // assign out = (state == ...);
    assign out=(state==B)?1:0;

endmodule
