module fifo #(parameter DWIDTH=8,DEPTH=16)(
  input clk,rst,
  input wr,rd,
  input [DWIDTH-1:0] din,
  output reg [DWIDTH-1:0] dout,
  output full,empty);
  
  reg [4:0]count;
  reg [3:0] w_ptr,r_ptr;
  reg [DWIDTH-1:0] fofo [DEPTH];
  
  always@(posedge clk) begin
    if(rst) begin
      w_ptr<=0;
      r_ptr<=0;
      count<=0;
      dout<=0;
    end
  end
  
  always@(posedge clk) begin
    if(wr & !full) begin
      fofo[w_ptr]<=din;
      w_ptr<=w_ptr+1;
      count<=count+1;
    end
  end
  
  always@(posedge clk) begin
    if(rd & !empty) begin
      dout<=fofo[r_ptr];
      r_ptr<=r_ptr+1;
      count<=count-1;
    end
  end
  
  assign full=(count==16)?1:0;
  assign empty=(count==0)?1:0;
  
endmodule
